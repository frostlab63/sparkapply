# Production Dockerfile for SparkApply User Service
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies (including dev dependencies for build)
RUN npm ci --include=dev

# Copy source code
COPY . .

# Build the application (if build script exists)
RUN npm run build 2>/dev/null || echo "No build script found, skipping build step"

# Production stage
FROM node:18-alpine AS production

# Create app user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S sparkapply -u 1001

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production && \
    npm cache clean --force

# Copy built application from builder stage
COPY --from=builder --chown=sparkapply:nodejs /app/src ./src
COPY --from=builder --chown=sparkapply:nodejs /app/dist ./dist 2>/dev/null || true

# Create necessary directories
RUN mkdir -p logs uploads && \
    chown -R sparkapply:nodejs logs uploads

# Install curl for health checks
RUN apk add --no-cache curl

# Switch to non-root user
USER sparkapply

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3001/api/v1/health || exit 1

# Start the application
CMD ["node", "src/index.js"]
