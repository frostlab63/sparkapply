apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sparkapply-ingress
  namespace: sparkapply-prod
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://sparkapply.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  tls:
  - hosts:
    - sparkapply.com
    - www.sparkapply.com
    - api.sparkapply.com
    secretName: sparkapply-tls
  rules:
  # Main website
  - host: sparkapply.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web
            port:
              number: 80
  
  # WWW redirect
  - host: www.sparkapply.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web
            port:
              number: 80
  
  # API endpoints
  - host: api.sparkapply.com
    http:
      paths:
      # User service
      - path: /api/v1
        pathType: Prefix
        backend:
          service:
            name: user-service
            port:
              number: 3001
      
      # Job service
      - path: /api/jobs
        pathType: Prefix
        backend:
          service:
            name: job-service
            port:
              number: 3002
      
      - path: /api/scraping
        pathType: Prefix
        backend:
          service:
            name: job-service
            port:
              number: 3002
      
      # Application service
      - path: /api/applications
        pathType: Prefix
        backend:
          service:
            name: application-service
            port:
              number: 3005
      
      # Health checks
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: user-service
            port:
              number: 3001
---
# Certificate issuer for Let's Encrypt
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@sparkapply.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx
---
# Network policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sparkapply-network-policy
  namespace: sparkapply-prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
  - from:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 3001
    - protocol: TCP
      port: 3002
    - protocol: TCP
      port: 3005
    - protocol: TCP
      port: 80
  egress:
  - {} # Allow all egress traffic
