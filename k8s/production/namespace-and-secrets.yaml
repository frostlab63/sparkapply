apiVersion: v1
kind: Namespace
metadata:
  name: sparkapply-prod
  labels:
    name: sparkapply-prod
    environment: production
---
# Secrets (values should be base64 encoded in production)
apiVersion: v1
kind: Secret
metadata:
  name: sparkapply-secrets
  namespace: sparkapply-prod
type: Opaque
data:
  # These are example values - replace with actual base64 encoded secrets in production
  database-url: cG9zdGdyZXNxbDovL3NwYXJrYXBwbHk6cGFzc3dvcmQxMjNAcG9zdGdyZXM6NTQzMi9zcGFya2FwcGx5X3Byb2Q= # postgresql://sparkapply:password123@postgres:5432/sparkapply_prod
  redis-url: cmVkaXM6Ly9yZWRpczozNjM3OQ== # redis://redis:6379
  jwt-secret: cHJvZC1qd3Qtc2VjcmV0LWtleS1jaGFuZ2UtaW4tcHJvZHVjdGlvbg== # prod-jwt-secret-key-change-in-production
  jwt-refresh-secret: cHJvZC1qd3QtcmVmcmVzaC1zZWNyZXQta2V5 # prod-jwt-refresh-secret-key
---
# Persistent Volume Claim for file uploads
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sparkapply-uploads
  namespace: sparkapply-prod
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
---
# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: sparkapply-config
  namespace: sparkapply-prod
data:
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  CORS_ORIGIN: "https://sparkapply.com"
  RATE_LIMIT_WINDOW_MS: "900000"
  RATE_LIMIT_MAX_REQUESTS: "100"
  MAX_FILE_SIZE: "10485760"
  ENABLE_ANALYTICS: "true"
  ENABLE_NOTIFICATIONS: "true"
  SCRAPING_INTERVAL_HOURS: "6"
  MAX_JOBS_PER_SCRAPE: "100"
  JOB_RETENTION_DAYS: "30"
---
# Service Account for the application
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sparkapply-service-account
  namespace: sparkapply-prod
---
# Role for the service account
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: sparkapply-prod
  name: sparkapply-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
---
# Role binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sparkapply-role-binding
  namespace: sparkapply-prod
subjects:
- kind: ServiceAccount
  name: sparkapply-service-account
  namespace: sparkapply-prod
roleRef:
  kind: Role
  name: sparkapply-role
  apiGroup: rbac.authorization.k8s.io
