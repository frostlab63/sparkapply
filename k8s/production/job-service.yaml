apiVersion: apps/v1
kind: Deployment
metadata:
  name: job-service
  namespace: sparkapply-prod
  labels:
    app: job-service
    version: "${IMAGE_TAG}"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: job-service
  template:
    metadata:
      labels:
        app: job-service
        version: "${IMAGE_TAG}"
    spec:
      containers:
      - name: job-service
        image: ghcr.io/frostlab63/sparkapply/job-service:${IMAGE_TAG}
        ports:
        - containerPort: 3002
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3002"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: sparkapply-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: sparkapply-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: sparkapply-secrets
              key: jwt-secret
        - name: USER_SERVICE_URL
          value: "http://user-service:3001"
        - name: ENABLE_JOB_SCRAPING
          value: "true"
        - name: SCRAPING_INTERVAL_HOURS
          value: "6"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: job-service
  namespace: sparkapply-prod
  labels:
    app: job-service
spec:
  selector:
    app: job-service
  ports:
  - port: 3002
    targetPort: 3002
    protocol: TCP
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: job-service-hpa
  namespace: sparkapply-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: job-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
