name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Job 1: Code Quality and Testing
  test:
    name: Test & Code Quality
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: sparkapply_test
          POSTGRES_USER: sparkapply
          POSTGRES_PASSWORD: password123
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    strategy:
      matrix:
        node-version: [18.x, 20.x]
        service: [user-service, job-service, application-service, web]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'

    - name: Install dependencies
      run: |
        if [ "${{ matrix.service }}" = "web" ]; then
          cd packages/web
        else
          cd packages/api/${{ matrix.service }}
        fi
        pnpm install --frozen-lockfile

    - name: Run tests
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://sparkapply:password123@localhost:5432/sparkapply_test
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-jwt-secret
      run: |
        if [ "${{ matrix.service }}" = "web" ]; then
          cd packages/web
          pnpm test -- --coverage --watchAll=false || echo "Tests not configured for web"
        else
          cd packages/api/${{ matrix.service }}
          pnpm test -- --coverage --detectOpenHandles --forceExit || echo "Tests not configured for ${{ matrix.service }}"
        fi

  # Job 2: Build Docker Images
  build:
    name: Build Images
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    
    strategy:
      matrix:
        service: [user-service, job-service, application-service, web]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.service == 'web' && 'packages/web' || format('packages/api/{0}', matrix.service) }}
        file: ${{ matrix.service == 'web' && 'packages/web/Dockerfile' || format('packages/api/{0}/Dockerfile', matrix.service) }}
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.service }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
